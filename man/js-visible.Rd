% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-js.R
\name{js-visible}
\alias{js-visible}
\alias{show}
\alias{hide}
\alias{toggle}
\title{Element Display}
\usage{
show(
  selector,
  process_selector = TRUE,
  session = shiny::getDefaultReactiveDomain()
)

hide(
  selector,
  process_selector = TRUE,
  session = shiny::getDefaultReactiveDomain()
)

toggle(
  selector,
  process_selector = TRUE,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{selector}{A CSS selector. If no selector
is recognised and \code{process_selector} is set to
\code{TRUE} then it is assumed to be an id.
e.g.: \code{show("hello")} will reveal the element with
\code{id} or \code{inputId} of \code{hello}.}

\item{process_selector}{Whether to pre-process the
\code{selector} argument to ensure a valid CSS selector
is passed.}
}
\description{
Show, hide, or toggle element visiblity of elements in
the DOM.
}
\examples{
library(shiny)

ui <- fluidPage(
	actionButton("show", "Show"),
	p(id = "element", "Hello", style = "display:none;")	
)

server <- function(input, output, session){
	observeEvent(input$show, {
		show("element")
	})
}

if(interactive())
	shinyApp(ui, server)

}
\keyword{internal}
